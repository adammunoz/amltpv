/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CajaDialog.java
 *
 * Created on 23-ago-2009, 12:26:47
 */

package amltpv;

import java.math.BigDecimal;
import java.text.NumberFormat;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Locale;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author adam
 */
public class CajaDialog extends javax.swing.JDialog implements LoggedDialog{
    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;
    private String fechaApertura,horaApertura,fechaCierre,horaCierre,usuario;
    private BigDecimal total,gastos,cambioAyer,debeHaber,tomorrowCambio,seLleva,resultado;
    /** Creates new form CajaDialog */
    public CajaDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        DefaultTableModel model = (DefaultTableModel) tablaCaja.getModel();
        
        tablaCaja.getColumnModel().getColumn(1).setCellRenderer(new FormatRenderer());
        
        this.usuario = usuarioLabel.getText();
        fechaApertura = AmltpvView.db.getStringValueFromCaja("dia_apertura");
        horaApertura = AmltpvView.db.getStringValueFromCaja("hora_apertura");
        fechaCierre = AmltpvView.util.getTodayString();
        horaCierre = AmltpvView.util.getTimeString();
        total = AmltpvView.db.totalCaja();
        gastos = AmltpvView.db.totalGastos();
        cambioAyer = AmltpvView.db.getYesterdayCambio();

        String totalString = NumberFormat.getCurrencyInstance
                (new Locale("es","ES")).format(total);
        String gastosString = NumberFormat.getCurrencyInstance
                (new Locale("es","ES")).format(gastos);
        String cambioAyerString = NumberFormat.getCurrencyInstance
                (new Locale("es","ES")).format(cambioAyer);
        
        model.addRow(new Object[] {"Fecha de apertura" , fechaApertura});
        model.addRow(new Object[] {"Hora de apertura" , horaApertura});
        model.addRow(new Object[] {"Fecha de cierre" , fechaCierre});
        model.addRow(new Object[] {"Hora de cierre" , horaCierre});
        model.addRow(new Object[] {"Total de ventas" , totalString});
        model.addRow(new Object[] {"Total de gastos" , gastosString});

        Vector gastosVector = AmltpvView.db.queryGastos(fechaApertura, horaApertura,
                fechaCierre, horaCierre);
        Iterator iter = gastosVector.iterator();
        Object [] temp;
        while (iter.hasNext()){
            temp = (Object[]) iter.next();
            temp[3] = NumberFormat.getCurrencyInstance
                (new Locale("es","ES")).format(temp[3]);
            model.addRow(new Object[]{temp[2],temp[3]});
        }
        debeHaber = total.subtract(gastos);
        debeHaber = debeHaber.add(cambioAyer);
        String debeHaberString = NumberFormat.getCurrencyInstance
                (new Locale("es","ES")).format(debeHaber);
        model.addRow(new Object[]{"En caja debe haber",debeHaberString});
        yesterdayCambioField.setText(cambioAyerString);
    }

    @Override
    public void setLoggedUser(String user){
        usuarioLabel.setText(user);
    }
    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
        return returnStatus;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCaja = new javax.swing.JTable();
        printButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tomorrowCambioField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        yesterdayCambioField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        seLlevaField = new javax.swing.JTextField();
        comprobarCajaButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        usuarioLabel = new javax.swing.JLabel();

        setName("Form"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(amltpv.AmltpvApp.class).getContext().getResourceMap(CajaDialog.class);
        okButton.setText(resourceMap.getString("okButton.text")); // NOI18N
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(resourceMap.getString("cancelButton.text")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tablaCaja.setFont(resourceMap.getFont("tablaCaja.font")); // NOI18N
        tablaCaja.setForeground(resourceMap.getColor("tablaCaja.foreground")); // NOI18N
        tablaCaja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", ""
            }
        ));
        tablaCaja.setName("tablaCaja"); // NOI18N
        jScrollPane1.setViewportView(tablaCaja);

        printButton.setText(resourceMap.getString("printButton.text")); // NOI18N
        printButton.setName("printButton"); // NOI18N
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), resourceMap.getString("jPanel1.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("jPanel1.border.titleFont"), resourceMap.getColor("jPanel1.border.titleColor"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        tomorrowCambioField.setText(resourceMap.getString("tomorrowCambioField.text")); // NOI18N
        tomorrowCambioField.setName("tomorrowCambioField"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        yesterdayCambioField.setEditable(false);
        yesterdayCambioField.setName("yesterdayCambioField"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        seLlevaField.setName("seLlevaField"); // NOI18N

        comprobarCajaButton.setText(resourceMap.getString("comprobarCajaButton.text")); // NOI18N
        comprobarCajaButton.setName("comprobarCajaButton"); // NOI18N
        comprobarCajaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comprobarCajaButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tomorrowCambioField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seLlevaField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(yesterdayCambioField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(comprobarCajaButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tomorrowCambioField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(seLlevaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(yesterdayCambioField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comprobarCajaButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        usuarioLabel.setText(resourceMap.getString("usuarioLabel.text")); // NOI18N
        usuarioLabel.setName("usuarioLabel"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(usuarioLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(printButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(okButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton)
                    .addComponent(jLabel4)
                    .addComponent(usuarioLabel)
                    .addComponent(printButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        AmltpvView.db.addCierre(usuario, BigDecimal.ZERO);
        AmltpvView.db.insertCambio(tomorrowCambio, fechaCierre, horaCierre);
        AmltpvView.db.updateConfItem("cajaCerrada", "true");
        AmltpvView.self.borrarMesas();
        ThreadServidor.servidor.killClients();
        doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void comprobarCajaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comprobarCajaButtonActionPerformed
        seLleva = new BigDecimal(seLlevaField.getText());
        
        tomorrowCambio = new BigDecimal(tomorrowCambioField.getText());
        

        resultado = debeHaber.subtract(seLleva);
        
        resultado = resultado.subtract(tomorrowCambio);
        

        if (resultado.floatValue() > 0){
            JOptionPane.showMessageDialog(this, "Faltan "+resultado.abs().toString());
        }
        else if (resultado.floatValue() < 0){
            JOptionPane.showMessageDialog(this, "Sobran "+resultado.abs().toString());
        }
        else{
            JOptionPane.showMessageDialog(this, "La caja está correcta");
        }
    }//GEN-LAST:event_comprobarCajaButtonActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        Vector<FacturaItem> facturaItemVec = new Vector();
        facturaItemVec.add(new FacturaItem("","Fecha de apertura " + fechaApertura,""));
        facturaItemVec.add(new FacturaItem("","Hora de apertura " + horaApertura,""));
        facturaItemVec.add(new FacturaItem("","Fecha de cierre " + fechaCierre,""));
        facturaItemVec.add(new FacturaItem("","Hora de cierre " + horaCierre,""));
        facturaItemVec.add(new FacturaItem
            ("","Total de ventas",NumberFormat.getCurrencyInstance(new Locale("es","ES")).
                format(total)));
        facturaItemVec.add(new FacturaItem
            ("","Total de gastos",NumberFormat.getCurrencyInstance(new Locale("es","ES")).
                format(gastos)));
        facturaItemVec.add(new FacturaItem
            ("","Cambio que había",NumberFormat.getCurrencyInstance(new Locale("es","ES")).
                format(cambioAyer)));
        facturaItemVec.add(new FacturaItem
            ("","Cambio que se deja",NumberFormat.getCurrencyInstance(new Locale("es","ES")).
                format(tomorrowCambio)));
        facturaItemVec.add(new FacturaItem
            ("","Dinero que se lleva",NumberFormat.getCurrencyInstance(new Locale("es","ES")).
                format(seLleva)));
        String resultadoStr;
        if (resultado.floatValue() > 0){
            resultadoStr = "Faltan "+resultado.abs().toString();
        }
        else if (resultado.floatValue() < 0){
            resultadoStr = "Sobran "+resultado.abs().toString();
        }
        else{
            resultadoStr = "La caja está correcta";
        }
        HashMap strings = new HashMap();
        strings.put("fecha", AmltpvView.util.getCurrentTimeString());
        strings.put("nombreNegocio", AmltpvView.db.queryValor("nombreNegocio"));
        strings.put("direccion", AmltpvView.db.queryValor("direccion"));
        strings.put("telefono", AmltpvView.db.queryValor("telefono"));
        strings.put("cif", AmltpvView.db.queryValor("cif"));
        strings.put("email", AmltpvView.db.queryValor("email"));
        strings.put("web", AmltpvView.db.queryValor("web"));
        Factura f = new Factura("Caja",facturaItemVec,resultadoStr,strings);      
        Impresora impresora = new Impresora();
        impresora.setSize(7.5,100);
        impresora.print(f);
    }//GEN-LAST:event_printButtonActionPerformed

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton comprobarCajaButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okButton;
    private javax.swing.JButton printButton;
    private javax.swing.JTextField seLlevaField;
    private javax.swing.JTable tablaCaja;
    private javax.swing.JTextField tomorrowCambioField;
    private javax.swing.JLabel usuarioLabel;
    private javax.swing.JTextField yesterdayCambioField;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;
}
